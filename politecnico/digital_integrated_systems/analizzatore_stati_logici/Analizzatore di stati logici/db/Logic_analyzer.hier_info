|Logic_analyzer
GPIO_1[0] => sampler:sampler1.input
GPIO_1[1] => sampler:sampler2.input
GPIO_1[2] => sampler:sampler3.input
GPIO_1[3] => sampler:sampler4.input
GPIO_1[4] => sampler:sampler5.input
GPIO_1[5] => sampler:sampler6.input
GPIO_1[6] => sampler:sampler7.input
GPIO_1[7] => sampler:sampler8.input
GPIO_1[8] => ~NO_FANOUT~
GPIO_1[9] => ~NO_FANOUT~
GPIO_1[10] => ~NO_FANOUT~
GPIO_1[11] => ~NO_FANOUT~
GPIO_1[12] => ~NO_FANOUT~
GPIO_1[13] => ~NO_FANOUT~
GPIO_1[14] => ~NO_FANOUT~
GPIO_1[15] => ~NO_FANOUT~
GPIO_1[16] => ~NO_FANOUT~
GPIO_1[17] => ~NO_FANOUT~
GPIO_1[18] => ~NO_FANOUT~
GPIO_1[19] => ~NO_FANOUT~
GPIO_1[20] => ~NO_FANOUT~
GPIO_1[21] => ~NO_FANOUT~
GPIO_1[22] => ~NO_FANOUT~
GPIO_1[23] => ~NO_FANOUT~
GPIO_1[24] => ~NO_FANOUT~
GPIO_1[25] => ~NO_FANOUT~
GPIO_1[26] => ~NO_FANOUT~
GPIO_1[27] => ~NO_FANOUT~
GPIO_1[28] => ~NO_FANOUT~
GPIO_1[29] => ~NO_FANOUT~
GPIO_1[30] => ~NO_FANOUT~
GPIO_1[31] => ~NO_FANOUT~
GPIO_1[32] => ~NO_FANOUT~
GPIO_1[33] => ~NO_FANOUT~
GPIO_1[34] => ~NO_FANOUT~
GPIO_1[35] => ~NO_FANOUT~
CLOCK_50 => sampler:sampler1.clk
CLOCK_50 => sampler:sampler2.clk
CLOCK_50 => sampler:sampler3.clk
CLOCK_50 => sampler:sampler4.clk
CLOCK_50 => sampler:sampler5.clk
CLOCK_50 => sampler:sampler6.clk
CLOCK_50 => sampler:sampler7.clk
CLOCK_50 => sampler:sampler8.clk
CLOCK_50 => clock_divider:cnt_variable_TC.CLOCK
CLOCK_50 => Memory_Interface:interfaccia_memoria.CLOCK_50
CLOCK_50 => pc_interface:interfaccia_pc.clock
CLOCK_50 => trigger_generator:generatore_trigger.clock
CLOCK_50 => FLIP_FLOP_D:semaforo_start.CLK
CLOCK_50 => FLIP_FLOP_D:semaforo_read.CLK
CLOCK_50 => DATA_REGISTER:registro_stato.CLK
CLOCK_50 => stato~1.DATAIN
KEY[0] => ~NO_FANOUT~
KEY[1] => stato~3.DATAIN
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SRAM_WE_N <= Memory_Interface:interfaccia_memoria.SRAM_WE_N
SRAM_OE_N <= Memory_Interface:interfaccia_memoria.SRAM_OE_N
SRAM_UB_N <= Memory_Interface:interfaccia_memoria.SRAM_UB_N
SRAM_LB_N <= Memory_Interface:interfaccia_memoria.SRAM_LB_N
SRAM_CE_N <= Memory_Interface:interfaccia_memoria.SRAM_CE_N
SRAM_ADDR[0] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[0]
SRAM_ADDR[1] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[1]
SRAM_ADDR[2] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[2]
SRAM_ADDR[3] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[3]
SRAM_ADDR[4] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[4]
SRAM_ADDR[5] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[5]
SRAM_ADDR[6] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[6]
SRAM_ADDR[7] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[7]
SRAM_ADDR[8] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[8]
SRAM_ADDR[9] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[9]
SRAM_ADDR[10] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[10]
SRAM_ADDR[11] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[11]
SRAM_ADDR[12] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[12]
SRAM_ADDR[13] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[13]
SRAM_ADDR[14] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[14]
SRAM_ADDR[15] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[15]
SRAM_ADDR[16] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[16]
SRAM_ADDR[17] <= Memory_Interface:interfaccia_memoria.SRAM_ADDR[17]
SRAM_DQ[0] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[0]
SRAM_DQ[1] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[1]
SRAM_DQ[2] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[2]
SRAM_DQ[3] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[3]
SRAM_DQ[4] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[4]
SRAM_DQ[5] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[5]
SRAM_DQ[6] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[6]
SRAM_DQ[7] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[7]
SRAM_DQ[8] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[8]
SRAM_DQ[9] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[9]
SRAM_DQ[10] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[10]
SRAM_DQ[11] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[11]
SRAM_DQ[12] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[12]
SRAM_DQ[13] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[13]
SRAM_DQ[14] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[14]
SRAM_DQ[15] <> Memory_Interface:interfaccia_memoria.SRAM_DQ[15]
UART_RXD => pc_interface:interfaccia_pc.UART_RXD
UART_TXD <= pc_interface:interfaccia_pc.UART_TXD


|Logic_analyzer|sampler:sampler1
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler1|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler1|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler1|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler1|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler1|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler1|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler2
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler2|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler2|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler2|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler2|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler2|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler2|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler3
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler3|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler3|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler3|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler3|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler3|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler3|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler4
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler4|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler4|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler4|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler4|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler4|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler4|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler5
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler5|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler5|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler5|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler5|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler5|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler5|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler6
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler6|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler6|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler6|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler6|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler6|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler6|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler7
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler7|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler7|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler7|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler7|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler7|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler7|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler8
input => FLIP_FLOP_D:reg_D.DATA_REG_IN
input => D_FF_RST_AS:rise_detector_as.clock
input => D_FF_RST_AS:fall_detector_as.clock
clk => FLIP_FLOP_D:reg_D.CLK
clk => FLIP_FLOP_D:eg_pastD.CLK
clk => FLIP_FLOP_D:rise_register.CLK
clk => FLIP_FLOP_D:fall_register.CLK
clk => stato~2.DATAIN
sample => stato.DATAB
sample => FLIP_FLOP_D:reg_D.EN_REG
sample => FLIP_FLOP_D:eg_pastD.EN_REG
sample => FLIP_FLOP_D:rise_register.EN_REG
sample => FLIP_FLOP_D:fall_register.EN_REG
sample => stato.DATAB
rst_as_n => FLIP_FLOP_D:reg_D.RESET
rst_as_n => FLIP_FLOP_D:eg_pastD.RESET
rst_as_n => FLIP_FLOP_D:rise_register.RESET
rst_as_n => FLIP_FLOP_D:fall_register.RESET
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
D <= FLIP_FLOP_D:reg_D.DATA_REG_OUT
P <= P.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler8|FLIP_FLOP_D:reg_D
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler8|FLIP_FLOP_D:eg_pastD
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler8|D_FF_RST_AS:rise_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler8|D_FF_RST_AS:fall_detector_as
input => Q~reg0.DATAIN
clock => Q~reg0.CLK
reset_as_n => Q~reg0.ACLR
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler8|FLIP_FLOP_D:rise_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|sampler:sampler8|FLIP_FLOP_D:fall_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|clock_divider:cnt_variable_TC
RESET => DISABLE_DFF.IN0
RESET => DATA_REGISTER:prescaler_register.RESET
RESET => COUNTER_NBIT:contatore_terminal_count_variabile.RESET
CLOCK => DATA_REGISTER:prescaler_register.CLK
CLOCK => FLIP_FLOP_D:master_flip_flop.CLK
CLOCK => COUNTER_NBIT:contatore_terminal_count_variabile.CLK
ENABLE => FLIP_FLOP_D:master_flip_flop.EN_REG
LOAD_COUNT => LOAD_COUNT_10.IN1
LOAD_COUNT => DATA_REGISTER:prescaler_register.EN_REG
DISABLE => LOAD_COUNT_10.IN1
DISABLE => DISABLE_DFF.IN1
PRESCALER_IN[0] => DATA_REGISTER:prescaler_register.DATA_REG_IN[0]
PRESCALER_IN[1] => DATA_REGISTER:prescaler_register.DATA_REG_IN[1]
PRESCALER_IN[2] => DATA_REGISTER:prescaler_register.DATA_REG_IN[2]
PRESCALER_IN[3] => DATA_REGISTER:prescaler_register.DATA_REG_IN[3]
TERMINAL_COUNT <= MUX_10_to_1:clock_select.DATA_OUT


|Logic_analyzer|clock_divider:cnt_variable_TC|DATA_REGISTER:prescaler_register
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|clock_divider:cnt_variable_TC|FLIP_FLOP_D:master_flip_flop
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|clock_divider:cnt_variable_TC|COUNTER_NBIT:contatore_terminal_count_variabile
EN_COUNT => COUNTER_PROCESS.IN1
EN_COUNT => COUNTER_PROCESS.IN0
EN_COUNT => COUNTER_PROCESS.IN0
LOAD_COUNT => COUNTER_PROCESS.IN1
LOAD_COUNT => COUNTER_PROCESS.IN1
CLK => TERM_COUNT.CLK
CLK => CNT[0].CLK
CLK => CNT[1].CLK
CLK => CNT[2].CLK
CLK => CNT[3].CLK
CLK => CNT[4].CLK
CLK => CNT[5].CLK
CLK => CNT[6].CLK
CLK => CNT[7].CLK
CLK => CNT[8].CLK
CLK => CNT[9].CLK
CLK => CNT[10].CLK
CLK => CNT[11].CLK
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => TERM_COUNT.OUTPUTSELECT
COUNT_IN[0] => CNT.DATAB
COUNT_IN[1] => CNT.DATAB
COUNT_IN[2] => CNT.DATAB
COUNT_IN[3] => CNT.DATAB
COUNT_IN[4] => CNT.DATAB
COUNT_IN[5] => CNT.DATAB
COUNT_IN[6] => CNT.DATAB
COUNT_IN[7] => CNT.DATAB
COUNT_IN[8] => CNT.DATAB
COUNT_IN[9] => CNT.DATAB
COUNT_IN[10] => CNT.DATAB
COUNT_IN[11] => CNT.DATAB
COUNT_OUT[0] <= CNT[0].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[1] <= CNT[1].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[2] <= CNT[2].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[3] <= CNT[3].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[4] <= CNT[4].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[5] <= CNT[5].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[6] <= CNT[6].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[7] <= CNT[7].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[8] <= CNT[8].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[9] <= CNT[9].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[10] <= CNT[10].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[11] <= CNT[11].DB_MAX_OUTPUT_PORT_TYPE
TC <= TERM_COUNT.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|clock_divider:cnt_variable_TC|MUX_10_to_1:clock_select
SEL[0] => Mux0.IN3
SEL[1] => Mux0.IN2
SEL[2] => Mux0.IN1
SEL[3] => Mux0.IN0
DATA_0 => Mux0.IN4
DATA_0 => Mux0.IN5
DATA_0 => Mux0.IN6
DATA_0 => Mux0.IN7
DATA_0 => Mux0.IN8
DATA_0 => Mux0.IN9
DATA_0 => Mux0.IN10
DATA_1 => Mux0.IN11
DATA_2 => Mux0.IN12
DATA_3 => Mux0.IN13
DATA_4 => Mux0.IN14
DATA_5 => Mux0.IN15
DATA_6 => Mux0.IN16
DATA_7 => Mux0.IN17
DATA_8 => Mux0.IN18
DATA_9 => Mux0.IN19
DATA_OUT <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|Memory_Interface:interfaccia_memoria
START => NEXT_STATE.POST_WRITE_LATCH_ADD.DATAB
START => NEXT_STATE.POST_WRITE.DATAB
RD_REQ => NEXT_STATE.OUTPUTSELECT
RD_REQ => NEXT_STATE.OUTPUTSELECT
RD_REQ => NEXT_STATE.INIZIALIZE_READ.DATAB
WR_REQ => NEXT_STATE.DATAB
WR_REQ => NEXT_STATE.DATAB
READ_READY => CU_NEXT_STATE_GENERATION.IN1
CLOCK_50 => DATA_REGISTER:DATA_OUT_REG.CLK
CLOCK_50 => DATA_REGISTER:DATA_IN_REG.CLK
CLOCK_50 => COUNTER_NBIT:COUNTER_18BIT.CLK
CLOCK_50 => DATA_REGISTER:START_ADD_REG.CLK
CLOCK_50 => FLIP_FLOP_D:REGISTER_READ.CLK
CLOCK_50 => PRESENT_STATE~1.DATAIN
RESET => Selector0.IN6
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => PRESENT_STATE.OUTPUTSELECT
RESET => NEXT_STATE.RESET_STATE.DATAB
DATA_INPUT[0] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[0]
DATA_INPUT[1] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[1]
DATA_INPUT[2] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[2]
DATA_INPUT[3] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[3]
DATA_INPUT[4] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[4]
DATA_INPUT[5] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[5]
DATA_INPUT[6] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[6]
DATA_INPUT[7] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[7]
DATA_INPUT[8] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[8]
DATA_INPUT[9] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[9]
DATA_INPUT[10] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[10]
DATA_INPUT[11] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[11]
DATA_INPUT[12] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[12]
DATA_INPUT[13] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[13]
DATA_INPUT[14] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[14]
DATA_INPUT[15] => DATA_REGISTER:DATA_IN_REG.DATA_REG_IN[15]
DATA_OUTPUT[0] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[0]
DATA_OUTPUT[1] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[1]
DATA_OUTPUT[2] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[2]
DATA_OUTPUT[3] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[3]
DATA_OUTPUT[4] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[4]
DATA_OUTPUT[5] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[5]
DATA_OUTPUT[6] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[6]
DATA_OUTPUT[7] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[7]
DATA_OUTPUT[8] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[8]
DATA_OUTPUT[9] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[9]
DATA_OUTPUT[10] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[10]
DATA_OUTPUT[11] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[11]
DATA_OUTPUT[12] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[12]
DATA_OUTPUT[13] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[13]
DATA_OUTPUT[14] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[14]
DATA_OUTPUT[15] <= DATA_REGISTER:DATA_OUT_REG.DATA_REG_OUT[15]
SRAM_ADDR[0] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[0]
SRAM_ADDR[1] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[1]
SRAM_ADDR[2] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[2]
SRAM_ADDR[3] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[3]
SRAM_ADDR[4] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[4]
SRAM_ADDR[5] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[5]
SRAM_ADDR[6] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[6]
SRAM_ADDR[7] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[7]
SRAM_ADDR[8] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[8]
SRAM_ADDR[9] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[9]
SRAM_ADDR[10] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[10]
SRAM_ADDR[11] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[11]
SRAM_ADDR[12] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[12]
SRAM_ADDR[13] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[13]
SRAM_ADDR[14] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[14]
SRAM_ADDR[15] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[15]
SRAM_ADDR[16] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[16]
SRAM_ADDR[17] <= COUNTER_NBIT:COUNTER_18BIT.COUNT_OUT[17]
SRAM_DQ[0] <> SRAM_DQ[0]
SRAM_DQ[1] <> SRAM_DQ[1]
SRAM_DQ[2] <> SRAM_DQ[2]
SRAM_DQ[3] <> SRAM_DQ[3]
SRAM_DQ[4] <> SRAM_DQ[4]
SRAM_DQ[5] <> SRAM_DQ[5]
SRAM_DQ[6] <> SRAM_DQ[6]
SRAM_DQ[7] <> SRAM_DQ[7]
SRAM_DQ[8] <> SRAM_DQ[8]
SRAM_DQ[9] <> SRAM_DQ[9]
SRAM_DQ[10] <> SRAM_DQ[10]
SRAM_DQ[11] <> SRAM_DQ[11]
SRAM_DQ[12] <> SRAM_DQ[12]
SRAM_DQ[13] <> SRAM_DQ[13]
SRAM_DQ[14] <> SRAM_DQ[14]
SRAM_DQ[15] <> SRAM_DQ[15]
OUTPUT_VALID <= OUTPUT_VALID.DB_MAX_OUTPUT_PORT_TYPE
START_ACK <= START_ACK.DB_MAX_OUTPUT_PORT_TYPE
RD_ACK <= RD_ACK.DB_MAX_OUTPUT_PORT_TYPE
WR_ACK <= WR_ACK.DB_MAX_OUTPUT_PORT_TYPE
MEM_WRITTEN <= MEM_WRITTEN.DB_MAX_OUTPUT_PORT_TYPE
LAST_ADDRESS_FLAG <= LAST_ADDRESS_FLAG.DB_MAX_OUTPUT_PORT_TYPE
MEM_READ <= MEM_READ.DB_MAX_OUTPUT_PORT_TYPE
SRAM_WE_N <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
SRAM_OE_N <= SRAM_OE_N.DB_MAX_OUTPUT_PORT_TYPE
SRAM_UB_N <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
SRAM_LB_N <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
SRAM_CE_N <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|Memory_Interface:interfaccia_memoria|DATA_REGISTER:DATA_OUT_REG
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
CLK => DATA_REG_OUT[8]~reg0.CLK
CLK => DATA_REG_OUT[9]~reg0.CLK
CLK => DATA_REG_OUT[10]~reg0.CLK
CLK => DATA_REG_OUT[11]~reg0.CLK
CLK => DATA_REG_OUT[12]~reg0.CLK
CLK => DATA_REG_OUT[13]~reg0.CLK
CLK => DATA_REG_OUT[14]~reg0.CLK
CLK => DATA_REG_OUT[15]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_IN[8] => DATA_REG_OUT.DATAB
DATA_REG_IN[9] => DATA_REG_OUT.DATAB
DATA_REG_IN[10] => DATA_REG_OUT.DATAB
DATA_REG_IN[11] => DATA_REG_OUT.DATAB
DATA_REG_IN[12] => DATA_REG_OUT.DATAB
DATA_REG_IN[13] => DATA_REG_OUT.DATAB
DATA_REG_IN[14] => DATA_REG_OUT.DATAB
DATA_REG_IN[15] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[8] <= DATA_REG_OUT[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[9] <= DATA_REG_OUT[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[10] <= DATA_REG_OUT[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[11] <= DATA_REG_OUT[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[12] <= DATA_REG_OUT[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[13] <= DATA_REG_OUT[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[14] <= DATA_REG_OUT[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[15] <= DATA_REG_OUT[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|Memory_Interface:interfaccia_memoria|DATA_REGISTER:DATA_IN_REG
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
CLK => DATA_REG_OUT[8]~reg0.CLK
CLK => DATA_REG_OUT[9]~reg0.CLK
CLK => DATA_REG_OUT[10]~reg0.CLK
CLK => DATA_REG_OUT[11]~reg0.CLK
CLK => DATA_REG_OUT[12]~reg0.CLK
CLK => DATA_REG_OUT[13]~reg0.CLK
CLK => DATA_REG_OUT[14]~reg0.CLK
CLK => DATA_REG_OUT[15]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_IN[8] => DATA_REG_OUT.DATAB
DATA_REG_IN[9] => DATA_REG_OUT.DATAB
DATA_REG_IN[10] => DATA_REG_OUT.DATAB
DATA_REG_IN[11] => DATA_REG_OUT.DATAB
DATA_REG_IN[12] => DATA_REG_OUT.DATAB
DATA_REG_IN[13] => DATA_REG_OUT.DATAB
DATA_REG_IN[14] => DATA_REG_OUT.DATAB
DATA_REG_IN[15] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[8] <= DATA_REG_OUT[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[9] <= DATA_REG_OUT[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[10] <= DATA_REG_OUT[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[11] <= DATA_REG_OUT[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[12] <= DATA_REG_OUT[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[13] <= DATA_REG_OUT[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[14] <= DATA_REG_OUT[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[15] <= DATA_REG_OUT[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|Memory_Interface:interfaccia_memoria|TRI_STATE:TREE_STATE
ENABLE_OUTPUT => DATA_OUT[0].OE
ENABLE_OUTPUT => DATA_OUT[1].OE
ENABLE_OUTPUT => DATA_OUT[2].OE
ENABLE_OUTPUT => DATA_OUT[3].OE
ENABLE_OUTPUT => DATA_OUT[4].OE
ENABLE_OUTPUT => DATA_OUT[5].OE
ENABLE_OUTPUT => DATA_OUT[6].OE
ENABLE_OUTPUT => DATA_OUT[7].OE
ENABLE_OUTPUT => DATA_OUT[8].OE
ENABLE_OUTPUT => DATA_OUT[9].OE
ENABLE_OUTPUT => DATA_OUT[10].OE
ENABLE_OUTPUT => DATA_OUT[11].OE
ENABLE_OUTPUT => DATA_OUT[12].OE
ENABLE_OUTPUT => DATA_OUT[13].OE
ENABLE_OUTPUT => DATA_OUT[14].OE
ENABLE_OUTPUT => DATA_OUT[15].OE
DATA_IN[0] => DATA_OUT[0].DATAIN
DATA_IN[1] => DATA_OUT[1].DATAIN
DATA_IN[2] => DATA_OUT[2].DATAIN
DATA_IN[3] => DATA_OUT[3].DATAIN
DATA_IN[4] => DATA_OUT[4].DATAIN
DATA_IN[5] => DATA_OUT[5].DATAIN
DATA_IN[6] => DATA_OUT[6].DATAIN
DATA_IN[7] => DATA_OUT[7].DATAIN
DATA_IN[8] => DATA_OUT[8].DATAIN
DATA_IN[9] => DATA_OUT[9].DATAIN
DATA_IN[10] => DATA_OUT[10].DATAIN
DATA_IN[11] => DATA_OUT[11].DATAIN
DATA_IN[12] => DATA_OUT[12].DATAIN
DATA_IN[13] => DATA_OUT[13].DATAIN
DATA_IN[14] => DATA_OUT[14].DATAIN
DATA_IN[15] => DATA_OUT[15].DATAIN
DATA_OUT[0] <= DATA_OUT[0].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[1] <= DATA_OUT[1].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[2] <= DATA_OUT[2].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[3] <= DATA_OUT[3].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[4] <= DATA_OUT[4].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[5] <= DATA_OUT[5].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[6] <= DATA_OUT[6].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[7] <= DATA_OUT[7].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[8] <= DATA_OUT[8].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[9] <= DATA_OUT[9].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[10] <= DATA_OUT[10].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[11] <= DATA_OUT[11].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[12] <= DATA_OUT[12].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[13] <= DATA_OUT[13].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[14] <= DATA_OUT[14].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[15] <= DATA_OUT[15].DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|Memory_Interface:interfaccia_memoria|COUNTER_NBIT:COUNTER_18BIT
EN_COUNT => COUNTER_PROCESS.IN1
EN_COUNT => COUNTER_PROCESS.IN0
EN_COUNT => COUNTER_PROCESS.IN0
LOAD_COUNT => COUNTER_PROCESS.IN1
LOAD_COUNT => COUNTER_PROCESS.IN1
CLK => TERM_COUNT.CLK
CLK => CNT[0].CLK
CLK => CNT[1].CLK
CLK => CNT[2].CLK
CLK => CNT[3].CLK
CLK => CNT[4].CLK
CLK => CNT[5].CLK
CLK => CNT[6].CLK
CLK => CNT[7].CLK
CLK => CNT[8].CLK
CLK => CNT[9].CLK
CLK => CNT[10].CLK
CLK => CNT[11].CLK
CLK => CNT[12].CLK
CLK => CNT[13].CLK
CLK => CNT[14].CLK
CLK => CNT[15].CLK
CLK => CNT[16].CLK
CLK => CNT[17].CLK
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => TERM_COUNT.OUTPUTSELECT
COUNT_IN[0] => CNT.DATAB
COUNT_IN[1] => CNT.DATAB
COUNT_IN[2] => CNT.DATAB
COUNT_IN[3] => CNT.DATAB
COUNT_IN[4] => CNT.DATAB
COUNT_IN[5] => CNT.DATAB
COUNT_IN[6] => CNT.DATAB
COUNT_IN[7] => CNT.DATAB
COUNT_IN[8] => CNT.DATAB
COUNT_IN[9] => CNT.DATAB
COUNT_IN[10] => CNT.DATAB
COUNT_IN[11] => CNT.DATAB
COUNT_IN[12] => CNT.DATAB
COUNT_IN[13] => CNT.DATAB
COUNT_IN[14] => CNT.DATAB
COUNT_IN[15] => CNT.DATAB
COUNT_IN[16] => CNT.DATAB
COUNT_IN[17] => CNT.DATAB
COUNT_OUT[0] <= CNT[0].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[1] <= CNT[1].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[2] <= CNT[2].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[3] <= CNT[3].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[4] <= CNT[4].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[5] <= CNT[5].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[6] <= CNT[6].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[7] <= CNT[7].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[8] <= CNT[8].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[9] <= CNT[9].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[10] <= CNT[10].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[11] <= CNT[11].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[12] <= CNT[12].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[13] <= CNT[13].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[14] <= CNT[14].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[15] <= CNT[15].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[16] <= CNT[16].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[17] <= CNT[17].DB_MAX_OUTPUT_PORT_TYPE
TC <= TERM_COUNT.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|Memory_Interface:interfaccia_memoria|DATA_REGISTER:START_ADD_REG
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
CLK => DATA_REG_OUT[8]~reg0.CLK
CLK => DATA_REG_OUT[9]~reg0.CLK
CLK => DATA_REG_OUT[10]~reg0.CLK
CLK => DATA_REG_OUT[11]~reg0.CLK
CLK => DATA_REG_OUT[12]~reg0.CLK
CLK => DATA_REG_OUT[13]~reg0.CLK
CLK => DATA_REG_OUT[14]~reg0.CLK
CLK => DATA_REG_OUT[15]~reg0.CLK
CLK => DATA_REG_OUT[16]~reg0.CLK
CLK => DATA_REG_OUT[17]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_IN[8] => DATA_REG_OUT.DATAB
DATA_REG_IN[9] => DATA_REG_OUT.DATAB
DATA_REG_IN[10] => DATA_REG_OUT.DATAB
DATA_REG_IN[11] => DATA_REG_OUT.DATAB
DATA_REG_IN[12] => DATA_REG_OUT.DATAB
DATA_REG_IN[13] => DATA_REG_OUT.DATAB
DATA_REG_IN[14] => DATA_REG_OUT.DATAB
DATA_REG_IN[15] => DATA_REG_OUT.DATAB
DATA_REG_IN[16] => DATA_REG_OUT.DATAB
DATA_REG_IN[17] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[8] <= DATA_REG_OUT[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[9] <= DATA_REG_OUT[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[10] <= DATA_REG_OUT[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[11] <= DATA_REG_OUT[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[12] <= DATA_REG_OUT[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[13] <= DATA_REG_OUT[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[14] <= DATA_REG_OUT[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[15] <= DATA_REG_OUT[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[16] <= DATA_REG_OUT[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[17] <= DATA_REG_OUT[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|Memory_Interface:interfaccia_memoria|FLIP_FLOP_D:REGISTER_READ
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc
clock => codifica_ascii:ascii_codifica.clk
clock => UART_TX:trasmissione_uart.CLOCK_50
clock => UART_RX:ricezione_uart.CLOCK_50
clock => decodifica_ascii:ascii_decodifica.clk
clock => FLIP_FLOP_D:REGISTER_READ_TC.CLK
clock => stato~27.DATAIN
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
rst_as => stato.OUTPUTSELECT
input_codifica[0] => codifica_ascii:ascii_codifica.input_blocco[0]
input_codifica[1] => codifica_ascii:ascii_codifica.input_blocco[1]
input_codifica[2] => codifica_ascii:ascii_codifica.input_blocco[2]
input_codifica[3] => codifica_ascii:ascii_codifica.input_blocco[3]
input_codifica[4] => codifica_ascii:ascii_codifica.input_blocco[4]
input_codifica[5] => codifica_ascii:ascii_codifica.input_blocco[5]
input_codifica[6] => codifica_ascii:ascii_codifica.input_blocco[6]
input_codifica[7] => codifica_ascii:ascii_codifica.input_blocco[7]
input_codifica[8] => codifica_ascii:ascii_codifica.input_blocco[8]
input_codifica[9] => codifica_ascii:ascii_codifica.input_blocco[9]
input_codifica[10] => codifica_ascii:ascii_codifica.input_blocco[10]
input_codifica[11] => codifica_ascii:ascii_codifica.input_blocco[11]
input_codifica[12] => codifica_ascii:ascii_codifica.input_blocco[12]
input_codifica[13] => codifica_ascii:ascii_codifica.input_blocco[13]
input_codifica[14] => codifica_ascii:ascii_codifica.input_blocco[14]
input_codifica[15] => codifica_ascii:ascii_codifica.input_blocco[15]
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => stato.OUTPUTSELECT
load_codifica => codifica_ascii:ascii_codifica.load_dati
block_sent <= block_sent.DB_MAX_OUTPUT_PORT_TYPE
UART_RXD => UART_RX:ricezione_uart.Data_In
UART_TXD <= UART_TX:trasmissione_uart.Q
start_ack => decodifica_ascii:ascii_decodifica.start_ack
read_ack => decodifica_ascii:ascii_decodifica.read_ack
F <= decodifica_ascii:ascii_decodifica.F
T <= decodifica_ascii:ascii_decodifica.T
S <= decodifica_ascii:ascii_decodifica.S
R <= decodifica_ascii:ascii_decodifica.R
frequenza[0] <= decodifica_ascii:ascii_decodifica.freq[0]
frequenza[1] <= decodifica_ascii:ascii_decodifica.freq[1]
frequenza[2] <= decodifica_ascii:ascii_decodifica.freq[2]
frequenza[3] <= decodifica_ascii:ascii_decodifica.freq[3]
pattern[0] <= decodifica_ascii:ascii_decodifica.pat[0]
pattern[1] <= decodifica_ascii:ascii_decodifica.pat[1]
pattern[2] <= decodifica_ascii:ascii_decodifica.pat[2]
pattern[3] <= decodifica_ascii:ascii_decodifica.pat[3]
pattern[4] <= decodifica_ascii:ascii_decodifica.pat[4]
pattern[5] <= decodifica_ascii:ascii_decodifica.pat[5]
pattern[6] <= decodifica_ascii:ascii_decodifica.pat[6]
pattern[7] <= decodifica_ascii:ascii_decodifica.pat[7]


|Logic_analyzer|pc_interface:interfaccia_pc|codifica_ascii:ascii_codifica
clk => COUNTER_NBIT:cnt_modulo8.CLK
clk => DATA_REGISTER:reg_d_g.CLK
clk => DATA_REGISTER:reg_uart.CLK
load_dati => DATA_REGISTER:reg_d_g.EN_REG
load_comando => DATA_REGISTER:reg_uart.EN_REG
rst_as_n => COUNTER_NBIT:cnt_modulo8.RESET
rst_as_n => DATA_REGISTER:reg_d_g.RESET
rst_as_n => DATA_REGISTER:reg_uart.RESET
done_tx => ~NO_FANOUT~
input_blocco[0] => DATA_REGISTER:reg_d_g.DATA_REG_IN[0]
input_blocco[1] => DATA_REGISTER:reg_d_g.DATA_REG_IN[1]
input_blocco[2] => DATA_REGISTER:reg_d_g.DATA_REG_IN[2]
input_blocco[3] => DATA_REGISTER:reg_d_g.DATA_REG_IN[3]
input_blocco[4] => DATA_REGISTER:reg_d_g.DATA_REG_IN[4]
input_blocco[5] => DATA_REGISTER:reg_d_g.DATA_REG_IN[5]
input_blocco[6] => DATA_REGISTER:reg_d_g.DATA_REG_IN[6]
input_blocco[7] => DATA_REGISTER:reg_d_g.DATA_REG_IN[7]
input_blocco[8] => DATA_REGISTER:reg_d_g.DATA_REG_IN[8]
input_blocco[9] => DATA_REGISTER:reg_d_g.DATA_REG_IN[9]
input_blocco[10] => DATA_REGISTER:reg_d_g.DATA_REG_IN[10]
input_blocco[11] => DATA_REGISTER:reg_d_g.DATA_REG_IN[11]
input_blocco[12] => DATA_REGISTER:reg_d_g.DATA_REG_IN[12]
input_blocco[13] => DATA_REGISTER:reg_d_g.DATA_REG_IN[13]
input_blocco[14] => DATA_REGISTER:reg_d_g.DATA_REG_IN[14]
input_blocco[15] => DATA_REGISTER:reg_d_g.DATA_REG_IN[15]
main_sel[0] => MUX_NBIT:mux_ascii.SEL[0]
main_sel[1] => MUX_NBIT:mux_ascii.SEL[1]
main_sel[2] => MUX_NBIT:mux_ascii.SEL[2]
dati_uart[0] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[0]
dati_uart[1] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[1]
dati_uart[2] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[2]
dati_uart[3] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[3]
dati_uart[4] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[4]
dati_uart[5] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[5]
dati_uart[6] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[6]
dati_uart[7] <= DATA_REGISTER:reg_uart.DATA_REG_OUT[7]
TC <= COUNTER_NBIT:cnt_modulo8.TC
done_codifica <= <GND>
en_cnt => COUNTER_NBIT:cnt_modulo8.EN_COUNT
d_g[0] <= MUX_NBIT:mux_channel.DATA_OUT[0]
d_g[1] <= MUX_NBIT:mux_channel.DATA_OUT[1]


|Logic_analyzer|pc_interface:interfaccia_pc|codifica_ascii:ascii_codifica|COUNTER_NBIT:cnt_modulo8
EN_COUNT => COUNTER_PROCESS.IN1
EN_COUNT => COUNTER_PROCESS.IN0
EN_COUNT => COUNTER_PROCESS.IN0
LOAD_COUNT => COUNTER_PROCESS.IN1
LOAD_COUNT => COUNTER_PROCESS.IN1
CLK => TERM_COUNT.CLK
CLK => CNT[0].CLK
CLK => CNT[1].CLK
CLK => CNT[2].CLK
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => CNT.OUTPUTSELECT
RESET => TERM_COUNT.OUTPUTSELECT
COUNT_IN[0] => CNT.DATAB
COUNT_IN[1] => CNT.DATAB
COUNT_IN[2] => CNT.DATAB
COUNT_OUT[0] <= CNT[0].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[1] <= CNT[1].DB_MAX_OUTPUT_PORT_TYPE
COUNT_OUT[2] <= CNT[2].DB_MAX_OUTPUT_PORT_TYPE
TC <= TERM_COUNT.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|codifica_ascii:ascii_codifica|DATA_REGISTER:reg_d_g
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
CLK => DATA_REG_OUT[8]~reg0.CLK
CLK => DATA_REG_OUT[9]~reg0.CLK
CLK => DATA_REG_OUT[10]~reg0.CLK
CLK => DATA_REG_OUT[11]~reg0.CLK
CLK => DATA_REG_OUT[12]~reg0.CLK
CLK => DATA_REG_OUT[13]~reg0.CLK
CLK => DATA_REG_OUT[14]~reg0.CLK
CLK => DATA_REG_OUT[15]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_IN[8] => DATA_REG_OUT.DATAB
DATA_REG_IN[9] => DATA_REG_OUT.DATAB
DATA_REG_IN[10] => DATA_REG_OUT.DATAB
DATA_REG_IN[11] => DATA_REG_OUT.DATAB
DATA_REG_IN[12] => DATA_REG_OUT.DATAB
DATA_REG_IN[13] => DATA_REG_OUT.DATAB
DATA_REG_IN[14] => DATA_REG_OUT.DATAB
DATA_REG_IN[15] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[8] <= DATA_REG_OUT[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[9] <= DATA_REG_OUT[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[10] <= DATA_REG_OUT[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[11] <= DATA_REG_OUT[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[12] <= DATA_REG_OUT[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[13] <= DATA_REG_OUT[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[14] <= DATA_REG_OUT[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[15] <= DATA_REG_OUT[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|codifica_ascii:ascii_codifica|MUX_NBIT:mux_channel
SEL[0] => Mux0.IN2
SEL[0] => Mux1.IN2
SEL[1] => Mux0.IN1
SEL[1] => Mux1.IN1
SEL[2] => Mux0.IN0
SEL[2] => Mux1.IN0
DATA_1[0] => Mux1.IN3
DATA_1[1] => Mux0.IN3
DATA_2[0] => Mux1.IN4
DATA_2[1] => Mux0.IN4
DATA_3[0] => Mux1.IN5
DATA_3[1] => Mux0.IN5
DATA_4[0] => Mux1.IN6
DATA_4[1] => Mux0.IN6
DATA_5[0] => Mux1.IN7
DATA_5[1] => Mux0.IN7
DATA_6[0] => Mux1.IN8
DATA_6[1] => Mux0.IN8
DATA_7[0] => Mux1.IN9
DATA_7[1] => Mux0.IN9
DATA_8[0] => Mux1.IN10
DATA_8[1] => Mux0.IN10
DATA_OUT[0] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[1] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|codifica_ascii:ascii_codifica|MUX_NBIT:mux_ascii
SEL[0] => Mux0.IN2
SEL[0] => Mux1.IN2
SEL[0] => Mux2.IN2
SEL[0] => Mux3.IN2
SEL[0] => Mux4.IN2
SEL[0] => Mux5.IN2
SEL[0] => Mux6.IN2
SEL[0] => Mux7.IN2
SEL[1] => Mux0.IN1
SEL[1] => Mux1.IN1
SEL[1] => Mux2.IN1
SEL[1] => Mux3.IN1
SEL[1] => Mux4.IN1
SEL[1] => Mux5.IN1
SEL[1] => Mux6.IN1
SEL[1] => Mux7.IN1
SEL[2] => Mux0.IN0
SEL[2] => Mux1.IN0
SEL[2] => Mux2.IN0
SEL[2] => Mux3.IN0
SEL[2] => Mux4.IN0
SEL[2] => Mux5.IN0
SEL[2] => Mux6.IN0
SEL[2] => Mux7.IN0
DATA_1[0] => Mux7.IN3
DATA_1[1] => Mux6.IN3
DATA_1[2] => Mux5.IN3
DATA_1[3] => Mux4.IN3
DATA_1[4] => Mux3.IN3
DATA_1[5] => Mux2.IN3
DATA_1[6] => Mux1.IN3
DATA_1[7] => Mux0.IN3
DATA_2[0] => Mux7.IN4
DATA_2[1] => Mux6.IN4
DATA_2[2] => Mux5.IN4
DATA_2[3] => Mux4.IN4
DATA_2[4] => Mux3.IN4
DATA_2[5] => Mux2.IN4
DATA_2[6] => Mux1.IN4
DATA_2[7] => Mux0.IN4
DATA_3[0] => Mux7.IN5
DATA_3[1] => Mux6.IN5
DATA_3[2] => Mux5.IN5
DATA_3[3] => Mux4.IN5
DATA_3[4] => Mux3.IN5
DATA_3[5] => Mux2.IN5
DATA_3[6] => Mux1.IN5
DATA_3[7] => Mux0.IN5
DATA_4[0] => Mux7.IN6
DATA_4[1] => Mux6.IN6
DATA_4[2] => Mux5.IN6
DATA_4[3] => Mux4.IN6
DATA_4[4] => Mux3.IN6
DATA_4[5] => Mux2.IN6
DATA_4[6] => Mux1.IN6
DATA_4[7] => Mux0.IN6
DATA_5[0] => Mux7.IN7
DATA_5[1] => Mux6.IN7
DATA_5[2] => Mux5.IN7
DATA_5[3] => Mux4.IN7
DATA_5[4] => Mux3.IN7
DATA_5[5] => Mux2.IN7
DATA_5[6] => Mux1.IN7
DATA_5[7] => Mux0.IN7
DATA_6[0] => Mux7.IN8
DATA_6[1] => Mux6.IN8
DATA_6[2] => Mux5.IN8
DATA_6[3] => Mux4.IN8
DATA_6[4] => Mux3.IN8
DATA_6[5] => Mux2.IN8
DATA_6[6] => Mux1.IN8
DATA_6[7] => Mux0.IN8
DATA_7[0] => Mux7.IN9
DATA_7[1] => Mux6.IN9
DATA_7[2] => Mux5.IN9
DATA_7[3] => Mux4.IN9
DATA_7[4] => Mux3.IN9
DATA_7[5] => Mux2.IN9
DATA_7[6] => Mux1.IN9
DATA_7[7] => Mux0.IN9
DATA_8[0] => Mux7.IN10
DATA_8[1] => Mux6.IN10
DATA_8[2] => Mux5.IN10
DATA_8[3] => Mux4.IN10
DATA_8[4] => Mux3.IN10
DATA_8[5] => Mux2.IN10
DATA_8[6] => Mux1.IN10
DATA_8[7] => Mux0.IN10
DATA_OUT[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|codifica_ascii:ascii_codifica|DATA_REGISTER:reg_uart
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_TX:trasmissione_uart
start_macchina => Uart_CU_TX:CU.start
Reset => Uart_CU_TX:CU.Reset_macchina
Data_In[0] => Uart_datapath_PISO:datapath.D[0]
Data_In[1] => Uart_datapath_PISO:datapath.D[1]
Data_In[2] => Uart_datapath_PISO:datapath.D[2]
Data_In[3] => Uart_datapath_PISO:datapath.D[3]
Data_In[4] => Uart_datapath_PISO:datapath.D[4]
Data_In[5] => Uart_datapath_PISO:datapath.D[5]
Data_In[6] => Uart_datapath_PISO:datapath.D[6]
Data_In[7] => Uart_datapath_PISO:datapath.D[7]
CLOCK_50 => Uart_datapath_PISO:datapath.CLOCK
CLOCK_50 => Uart_CU_TX:CU.CLOCK_50
Q <= Uart_datapath_PISO:datapath.Q
Done <= Uart_CU_TX:CU.Done


|Logic_analyzer|pc_interface:interfaccia_pc|UART_TX:trasmissione_uart|Uart_datapath_PISO:datapath
CLOCK => counter:counter_434.CLOCK_50
CLOCK => counter:counter_10.CLOCK_50
CLOCK => Shift_reg_PISO:REG_DATA.Clock_50
D[0] => Shift_reg_PISO:REG_DATA.D[0]
D[1] => Shift_reg_PISO:REG_DATA.D[1]
D[2] => Shift_reg_PISO:REG_DATA.D[2]
D[3] => Shift_reg_PISO:REG_DATA.D[3]
D[4] => Shift_reg_PISO:REG_DATA.D[4]
D[5] => Shift_reg_PISO:REG_DATA.D[5]
D[6] => Shift_reg_PISO:REG_DATA.D[6]
D[7] => Shift_reg_PISO:REG_DATA.D[7]
Rst1 => counter:counter_434.reset
Rst2 => counter:counter_10.reset
Reset_data => Shift_reg_PISO:REG_DATA.Reset
Shift_data => Shift_reg_PISO:REG_DATA.Sh
En_data => Shift_reg_PISO:REG_DATA.En
Inc1 => counter:counter_434.enable
Inc2 => counter:counter_10.enable
TC1 <= counter:counter_434.TC
TC2 <= counter:counter_10.TC
Q <= Shift_reg_PISO:REG_DATA.Q


|Logic_analyzer|pc_interface:interfaccia_pc|UART_TX:trasmissione_uart|Uart_datapath_PISO:datapath|counter:counter_434
CLOCK_50 => TC~reg0.CLK
CLOCK_50 => tmp[0].CLK
CLOCK_50 => tmp[1].CLK
CLOCK_50 => tmp[2].CLK
CLOCK_50 => tmp[3].CLK
CLOCK_50 => tmp[4].CLK
CLOCK_50 => tmp[5].CLK
CLOCK_50 => tmp[6].CLK
CLOCK_50 => tmp[7].CLK
CLOCK_50 => tmp[8].CLK
CLOCK_50 => tmp[9].CLK
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => TC.OUTPUTSELECT
enable => TC.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
valore[0] => Add0.IN18
valore[1] => Add0.IN17
valore[2] => Add0.IN16
valore[3] => Add0.IN15
valore[4] => Add0.IN14
valore[5] => Add0.IN13
valore[6] => Add0.IN12
valore[7] => Add0.IN11
valore[8] => Add0.IN10
uscita[0] <= tmp[0].DB_MAX_OUTPUT_PORT_TYPE
uscita[1] <= tmp[1].DB_MAX_OUTPUT_PORT_TYPE
uscita[2] <= tmp[2].DB_MAX_OUTPUT_PORT_TYPE
uscita[3] <= tmp[3].DB_MAX_OUTPUT_PORT_TYPE
uscita[4] <= tmp[4].DB_MAX_OUTPUT_PORT_TYPE
uscita[5] <= tmp[5].DB_MAX_OUTPUT_PORT_TYPE
uscita[6] <= tmp[6].DB_MAX_OUTPUT_PORT_TYPE
uscita[7] <= tmp[7].DB_MAX_OUTPUT_PORT_TYPE
uscita[8] <= tmp[8].DB_MAX_OUTPUT_PORT_TYPE
TC <= TC~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_TX:trasmissione_uart|Uart_datapath_PISO:datapath|counter:counter_10
CLOCK_50 => TC~reg0.CLK
CLOCK_50 => tmp[0].CLK
CLOCK_50 => tmp[1].CLK
CLOCK_50 => tmp[2].CLK
CLOCK_50 => tmp[3].CLK
CLOCK_50 => tmp[4].CLK
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => TC.OUTPUTSELECT
enable => TC.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
valore[0] => Add0.IN8
valore[1] => Add0.IN7
valore[2] => Add0.IN6
valore[3] => Add0.IN5
uscita[0] <= tmp[0].DB_MAX_OUTPUT_PORT_TYPE
uscita[1] <= tmp[1].DB_MAX_OUTPUT_PORT_TYPE
uscita[2] <= tmp[2].DB_MAX_OUTPUT_PORT_TYPE
uscita[3] <= tmp[3].DB_MAX_OUTPUT_PORT_TYPE
TC <= TC~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_TX:trasmissione_uart|Uart_datapath_PISO:datapath|Shift_reg_PISO:REG_DATA
D[0] => t.DATAB
D[1] => t.DATAB
D[2] => t.DATAB
D[3] => t.DATAB
D[4] => t.DATAB
D[5] => t.DATAB
D[6] => t.DATAB
D[7] => t.DATAB
Clock_50 => t[0].CLK
Clock_50 => t[1].CLK
Clock_50 => t[2].CLK
Clock_50 => t[3].CLK
Clock_50 => t[4].CLK
Clock_50 => t[5].CLK
Clock_50 => t[6].CLK
Clock_50 => t[7].CLK
Clock_50 => t[8].CLK
Clock_50 => t[9].CLK
Reset => t[0].PRESET
Reset => t[1].PRESET
Reset => t[2].PRESET
Reset => t[3].PRESET
Reset => t[4].PRESET
Reset => t[5].PRESET
Reset => t[6].PRESET
Reset => t[7].PRESET
Reset => t[8].PRESET
Reset => t[9].PRESET
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t.OUTPUTSELECT
En => t[9].ENA
Q <= t[0].DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_TX:trasmissione_uart|Uart_CU_TX:CU
start => Next_state.Before_Data_state.DATAB
start => Selector0.IN2
Reset_macchina => Present_state~3.DATAIN
CLOCK_50 => Present_state~1.DATAIN
Rst1 <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Rst2 <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Reset_data <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Shift_data <= Shift_data.DB_MAX_OUTPUT_PORT_TYPE
En_data <= En_data.DB_MAX_OUTPUT_PORT_TYPE
Inc1 <= Inc1.DB_MAX_OUTPUT_PORT_TYPE
Inc2 <= Inc2.DB_MAX_OUTPUT_PORT_TYPE
Done <= Done.DB_MAX_OUTPUT_PORT_TYPE
TC1 => Next_state.Shift_Data_state.DATAB
TC1 => Selector1.IN2
TC2 => Next_state.End_state.DATAB
TC2 => Selector1.IN3


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart
Start_RX <= Uart_rx_CU:CU.Start_RX
Reset => Uart_rx_CU:CU.Reset_macchina
Data_In => Uart_rx_datapath:datapath.D
CLOCK_50 => Uart_rx_datapath:datapath.CLOCK_50
CLOCK_50 => Uart_rx_CU:CU.CLOCK_50
Q[0] <= Uart_rx_datapath:datapath.Q[0]
Q[1] <= Uart_rx_datapath:datapath.Q[1]
Q[2] <= Uart_rx_datapath:datapath.Q[2]
Q[3] <= Uart_rx_datapath:datapath.Q[3]
Q[4] <= Uart_rx_datapath:datapath.Q[4]
Q[5] <= Uart_rx_datapath:datapath.Q[5]
Q[6] <= Uart_rx_datapath:datapath.Q[6]
Q[7] <= Uart_rx_datapath:datapath.Q[7]
Done <= Uart_rx_CU:CU.Done


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath
CLOCK_50 => counter:counter_54.CLOCK_50
CLOCK_50 => counter:counter_8.CLOCK_50
CLOCK_50 => counter:counter_9.CLOCK_50
CLOCK_50 => Shift_reg:REG_START.Clock_50
CLOCK_50 => Shift_reg:REG_DATA.Clock_50
CLOCK_50 => DATA_REGISTER:DATA_OUT.CLK
CLOCK_50 => D_FF_UART:STOP.clock
D => Shift_reg:REG_START.D
D => D_FF_UART:STOP.input
Rst1 => counter:counter_54.reset
Rst2 => counter:counter_8.reset
Rst3 => counter:counter_9.reset
Reset_start => Shift_reg:REG_START.Reset
Reset_data => Shift_reg:REG_DATA.Reset
Reset_data => D_FF_UART:STOP.rst_sy_n
Rst_reg => DATA_REGISTER:DATA_OUT.RESET
Shift_start => Shift_reg:REG_START.Sh
Shift_data => Shift_reg:REG_DATA.Sh
Shift_data => D_FF_UART:STOP.sh
En_start => Shift_reg:REG_START.En
En_data => Shift_reg:REG_DATA.En
En_data => D_FF_UART:STOP.enable
en_reg_q => DATA_REGISTER:DATA_OUT.EN_REG
Inc1 => counter:counter_54.enable
Inc2 => counter:counter_8.enable
Inc3 => counter:counter_9.enable
TC1 <= counter:counter_54.TC
TC2 <= counter:counter_8.TC
TC3 <= counter:counter_9.TC
Start <= Start.DB_MAX_OUTPUT_PORT_TYPE
Q[0] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[0]
Q[1] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[1]
Q[2] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[2]
Q[3] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[3]
Q[4] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[4]
Q[5] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[5]
Q[6] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[6]
Q[7] <= DATA_REGISTER:DATA_OUT.DATA_REG_OUT[7]
stop_bit <= D_FF_UART:STOP.Q


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath|counter:counter_54
CLOCK_50 => TC~reg0.CLK
CLOCK_50 => tmp[0].CLK
CLOCK_50 => tmp[1].CLK
CLOCK_50 => tmp[2].CLK
CLOCK_50 => tmp[3].CLK
CLOCK_50 => tmp[4].CLK
CLOCK_50 => tmp[5].CLK
CLOCK_50 => tmp[6].CLK
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => TC.OUTPUTSELECT
enable => TC.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
valore[0] => Add0.IN12
valore[1] => Add0.IN11
valore[2] => Add0.IN10
valore[3] => Add0.IN9
valore[4] => Add0.IN8
valore[5] => Add0.IN7
uscita[0] <= tmp[0].DB_MAX_OUTPUT_PORT_TYPE
uscita[1] <= tmp[1].DB_MAX_OUTPUT_PORT_TYPE
uscita[2] <= tmp[2].DB_MAX_OUTPUT_PORT_TYPE
uscita[3] <= tmp[3].DB_MAX_OUTPUT_PORT_TYPE
uscita[4] <= tmp[4].DB_MAX_OUTPUT_PORT_TYPE
uscita[5] <= tmp[5].DB_MAX_OUTPUT_PORT_TYPE
TC <= TC~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath|counter:counter_8
CLOCK_50 => TC~reg0.CLK
CLOCK_50 => tmp[0].CLK
CLOCK_50 => tmp[1].CLK
CLOCK_50 => tmp[2].CLK
CLOCK_50 => tmp[3].CLK
CLOCK_50 => tmp[4].CLK
CLOCK_50 => tmp[5].CLK
CLOCK_50 => tmp[6].CLK
CLOCK_50 => tmp[7].CLK
CLOCK_50 => tmp[8].CLK
CLOCK_50 => tmp[9].CLK
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => TC.OUTPUTSELECT
enable => TC.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
valore[0] => Add0.IN18
valore[1] => Add0.IN17
valore[2] => Add0.IN16
valore[3] => Add0.IN15
valore[4] => Add0.IN14
valore[5] => Add0.IN13
valore[6] => Add0.IN12
valore[7] => Add0.IN11
valore[8] => Add0.IN10
uscita[0] <= tmp[0].DB_MAX_OUTPUT_PORT_TYPE
uscita[1] <= tmp[1].DB_MAX_OUTPUT_PORT_TYPE
uscita[2] <= tmp[2].DB_MAX_OUTPUT_PORT_TYPE
uscita[3] <= tmp[3].DB_MAX_OUTPUT_PORT_TYPE
uscita[4] <= tmp[4].DB_MAX_OUTPUT_PORT_TYPE
uscita[5] <= tmp[5].DB_MAX_OUTPUT_PORT_TYPE
uscita[6] <= tmp[6].DB_MAX_OUTPUT_PORT_TYPE
uscita[7] <= tmp[7].DB_MAX_OUTPUT_PORT_TYPE
uscita[8] <= tmp[8].DB_MAX_OUTPUT_PORT_TYPE
TC <= TC~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath|counter:counter_9
CLOCK_50 => TC~reg0.CLK
CLOCK_50 => tmp[0].CLK
CLOCK_50 => tmp[1].CLK
CLOCK_50 => tmp[2].CLK
CLOCK_50 => tmp[3].CLK
CLOCK_50 => tmp[4].CLK
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => tmp.OUTPUTSELECT
reset => TC.OUTPUTSELECT
enable => TC.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
enable => tmp.OUTPUTSELECT
valore[0] => Add0.IN8
valore[1] => Add0.IN7
valore[2] => Add0.IN6
valore[3] => Add0.IN5
uscita[0] <= tmp[0].DB_MAX_OUTPUT_PORT_TYPE
uscita[1] <= tmp[1].DB_MAX_OUTPUT_PORT_TYPE
uscita[2] <= tmp[2].DB_MAX_OUTPUT_PORT_TYPE
uscita[3] <= tmp[3].DB_MAX_OUTPUT_PORT_TYPE
TC <= TC~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath|Shift_reg:REG_START
D => t.DATAB
Clock_50 => t[0].CLK
Clock_50 => t[1].CLK
Clock_50 => t[2].CLK
Clock_50 => t[3].CLK
Clock_50 => t[4].CLK
Clock_50 => t[5].CLK
Clock_50 => t[6].CLK
Clock_50 => t[7].CLK
Reset => t[0].PRESET
Reset => t[1].PRESET
Reset => t[2].PRESET
Reset => t[3].PRESET
Reset => t[4].PRESET
Reset => t[5].PRESET
Reset => t[6].PRESET
Reset => t[7].PRESET
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
En => t[0].ENA
En => t[7].ENA
En => t[6].ENA
En => t[5].ENA
En => t[4].ENA
En => t[3].ENA
En => t[2].ENA
En => t[1].ENA
Q[0] <= t[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= t[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= t[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= t[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= t[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= t[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= t[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= t[7].DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath|Shift_reg:REG_DATA
D => t.DATAB
Clock_50 => t[0].CLK
Clock_50 => t[1].CLK
Clock_50 => t[2].CLK
Clock_50 => t[3].CLK
Clock_50 => t[4].CLK
Clock_50 => t[5].CLK
Clock_50 => t[6].CLK
Clock_50 => t[7].CLK
Reset => t[0].PRESET
Reset => t[1].PRESET
Reset => t[2].PRESET
Reset => t[3].PRESET
Reset => t[4].PRESET
Reset => t[5].PRESET
Reset => t[6].PRESET
Reset => t[7].PRESET
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
Sh => t.OUTPUTSELECT
En => t[0].ENA
En => t[7].ENA
En => t[6].ENA
En => t[5].ENA
En => t[4].ENA
En => t[3].ENA
En => t[2].ENA
En => t[1].ENA
Q[0] <= t[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= t[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= t[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= t[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= t[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= t[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= t[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= t[7].DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath|DATA_REGISTER:DATA_OUT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_datapath:datapath|D_FF_UART:STOP
sh => Q.OUTPUTSELECT
input => Q.DATAB
clock => Q~reg0.CLK
enable => Q~reg0.ENA
rst_sy_n => Q~reg0.PRESET
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|UART_RX:ricezione_uart|Uart_rx_CU:CU
stop_bit => Next_state.End_state.DATAB
stop_bit => Selector0.IN2
Reset_macchina => Present_state~3.DATAIN
CLOCK_50 => Present_state~1.DATAIN
Rst1 <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Rst2 <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Rst3 <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Reset_start <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Reset_data <= Reset_data.DB_MAX_OUTPUT_PORT_TYPE
Rst_reg <= Rst_reg.DB_MAX_OUTPUT_PORT_TYPE
Shift_start <= Shift_start.DB_MAX_OUTPUT_PORT_TYPE
Shift_data <= Shift_data.DB_MAX_OUTPUT_PORT_TYPE
En_start <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
En_data <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
en_reg_q <= en_reg_q.DB_MAX_OUTPUT_PORT_TYPE
Inc1 <= Inc1.DB_MAX_OUTPUT_PORT_TYPE
Inc2 <= Inc2.DB_MAX_OUTPUT_PORT_TYPE
Inc3 <= Inc3.DB_MAX_OUTPUT_PORT_TYPE
Done <= Done.DB_MAX_OUTPUT_PORT_TYPE
TC1 => Next_state.Shift_Start_state.DATAB
TC1 => Selector1.IN2
TC2 => Next_state.INC3_state.DATAB
TC2 => Selector2.IN1
TC3 => Next_state.Stop_bit_state.DATAB
TC3 => Selector2.IN2
Start => Selector2.IN4
Start => Selector1.IN3
Start_RX <= Start_RX.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica
clk => DATA_REGISTER:reg_frequenza.CLK
clk => DATA_REGISTER:reg_MSB.CLK
clk => DATA_REGISTER:reg_LSB.CLK
clk => DATA_REGISTER:reg_pattern.CLK
clk => FLIP_FLOP_D:flag_frequenza.CLK
clk => FLIP_FLOP_D:flag_pattern.CLK
clk => FLIP_FLOP_D:flag_start.CLK
clk => FLIP_FLOP_D:flag_read.CLK
clk => stato~19.DATAIN
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
load_decodifica => stato.OUTPUTSELECT
done_rx => Selector2.IN3
done_rx => Selector5.IN3
done_rx => Selector13.IN3
done_rx => Selector3.IN2
done_rx => Selector4.IN2
done_rx => Selector12.IN3
rst_as_n => stato~21.DATAIN
input_decodifica[0] => comparatore:comparatore_decodifica.command[0]
input_decodifica[0] => adder_4bit:sommatore.NUM1[0]
input_decodifica[0] => mux_2to1:multiplexer.in1[0]
input_decodifica[1] => comparatore:comparatore_decodifica.command[1]
input_decodifica[1] => adder_4bit:sommatore.NUM1[1]
input_decodifica[1] => mux_2to1:multiplexer.in1[1]
input_decodifica[2] => comparatore:comparatore_decodifica.command[2]
input_decodifica[2] => adder_4bit:sommatore.NUM1[2]
input_decodifica[2] => mux_2to1:multiplexer.in1[2]
input_decodifica[3] => comparatore:comparatore_decodifica.command[3]
input_decodifica[3] => adder_4bit:sommatore.NUM1[3]
input_decodifica[3] => mux_2to1:multiplexer.in1[3]
input_decodifica[4] => comparatore:comparatore_decodifica.command[4]
input_decodifica[4] => adder_4bit:sommatore.NUM1[4]
input_decodifica[4] => mux_2to1:multiplexer.in1[4]
input_decodifica[5] => comparatore:comparatore_decodifica.command[5]
input_decodifica[5] => adder_4bit:sommatore.NUM1[5]
input_decodifica[5] => mux_2to1:multiplexer.in1[5]
input_decodifica[6] => comparatore:comparatore_decodifica.command[6]
input_decodifica[6] => adder_4bit:sommatore.NUM1[6]
input_decodifica[6] => mux_2to1:multiplexer.in1[6]
input_decodifica[7] => comparatore:comparatore_decodifica.command[7]
input_decodifica[7] => adder_4bit:sommatore.NUM1[7]
input_decodifica[7] => mux_2to1:multiplexer.in1[7]
start_ack => reset_start.IN0
read_ack => reset_read.IN0
fail <= comparatore:comparatore_decodifica.err
F <= FLIP_FLOP_D:flag_frequenza.DATA_REG_OUT
T <= FLIP_FLOP_D:flag_pattern.DATA_REG_OUT
S <= FLIP_FLOP_D:flag_start.DATA_REG_OUT
R <= FLIP_FLOP_D:flag_read.DATA_REG_OUT
done_decodifica <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
freq[0] <= DATA_REGISTER:reg_frequenza.DATA_REG_OUT[0]
freq[1] <= DATA_REGISTER:reg_frequenza.DATA_REG_OUT[1]
freq[2] <= DATA_REGISTER:reg_frequenza.DATA_REG_OUT[2]
freq[3] <= DATA_REGISTER:reg_frequenza.DATA_REG_OUT[3]
pat[0] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[0]
pat[1] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[1]
pat[2] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[2]
pat[3] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[3]
pat[4] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[4]
pat[5] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[5]
pat[6] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[6]
pat[7] <= DATA_REGISTER:reg_pattern.DATA_REG_OUT[7]


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|comparatore:comparatore_decodifica
command[0] => n_AF.IN1
command[0] => Equal0.IN4
command[0] => Equal1.IN4
command[0] => Equal2.IN7
command[0] => Equal3.IN4
command[0] => n_AF.IN1
command[1] => n_AF.IN1
command[1] => Equal0.IN7
command[1] => Equal1.IN3
command[1] => Equal2.IN6
command[1] => Equal3.IN7
command[1] => n_09.IN1
command[1] => n_AF.IN1
command[2] => n_AF.IN1
command[2] => Equal0.IN6
command[2] => Equal1.IN7
command[2] => Equal2.IN3
command[2] => Equal3.IN3
command[2] => n_09.IN1
command[2] => n_AF.IN1
command[3] => Equal0.IN3
command[3] => Equal1.IN2
command[3] => Equal2.IN2
command[3] => Equal3.IN2
command[3] => n_09.IN1
command[3] => n_AF.IN1
command[4] => n_09.IN1
command[4] => Equal0.IN2
command[4] => Equal1.IN6
command[4] => Equal2.IN5
command[4] => Equal3.IN6
command[4] => n_AF.IN1
command[5] => n_09.IN1
command[5] => Equal0.IN1
command[5] => Equal1.IN1
command[5] => Equal2.IN1
command[5] => Equal3.IN1
command[5] => n_AF.IN1
command[6] => n_AF.IN0
command[6] => Equal0.IN5
command[6] => Equal1.IN5
command[6] => Equal2.IN4
command[6] => Equal3.IN5
command[6] => n_09.IN0
command[7] => Equal0.IN0
command[7] => Equal1.IN0
command[7] => Equal2.IN0
command[7] => Equal3.IN0
command[7] => n_09.IN1
command[7] => n_AF.IN1
matchF <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
matchT <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
matchS <= Equal2.DB_MAX_OUTPUT_PORT_TYPE
matchR <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
err <= err.DB_MAX_OUTPUT_PORT_TYPE
n_09 <= n_09.DB_MAX_OUTPUT_PORT_TYPE
n_AF <= n_AF.DB_MAX_OUTPUT_PORT_TYPE
num <= num.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|adder_4bit:sommatore
NUM1[0] => Add0.IN8
NUM1[1] => Add0.IN7
NUM1[2] => Add0.IN6
NUM1[3] => Add0.IN5
NUM1[4] => Add0.IN4
NUM1[5] => Add0.IN3
NUM1[6] => Add0.IN2
NUM1[7] => Add0.IN1
NUM2[0] => Add0.IN16
NUM2[1] => Add0.IN15
NUM2[2] => Add0.IN14
NUM2[3] => Add0.IN13
NUM2[4] => Add0.IN12
NUM2[5] => Add0.IN11
NUM2[6] => Add0.IN10
NUM2[7] => Add0.IN9
SUM[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
SUM[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
SUM[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
SUM[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
SUM[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
SUM[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
SUM[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
SUM[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|mux_2to1:multiplexer
in1[0] => out_mux.DATAA
in1[1] => out_mux.DATAA
in1[2] => out_mux.DATAA
in1[3] => out_mux.DATAA
in1[4] => out_mux.DATAA
in1[5] => out_mux.DATAA
in1[6] => out_mux.DATAA
in1[7] => out_mux.DATAA
in2[0] => out_mux.DATAB
in2[1] => out_mux.DATAB
in2[2] => out_mux.DATAB
in2[3] => out_mux.DATAB
in2[4] => out_mux.DATAB
in2[5] => out_mux.DATAB
in2[6] => out_mux.DATAB
in2[7] => out_mux.DATAB
SEL_MUX => out_mux.OUTPUTSELECT
SEL_MUX => out_mux.OUTPUTSELECT
SEL_MUX => out_mux.OUTPUTSELECT
SEL_MUX => out_mux.OUTPUTSELECT
SEL_MUX => out_mux.OUTPUTSELECT
SEL_MUX => out_mux.OUTPUTSELECT
SEL_MUX => out_mux.OUTPUTSELECT
SEL_MUX => out_mux.OUTPUTSELECT
out_mux[0] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE
out_mux[1] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE
out_mux[2] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE
out_mux[3] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE
out_mux[4] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE
out_mux[5] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE
out_mux[6] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE
out_mux[7] <= out_mux.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|DATA_REGISTER:reg_frequenza
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|DATA_REGISTER:reg_MSB
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|DATA_REGISTER:reg_LSB
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|DATA_REGISTER:reg_pattern
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|FLIP_FLOP_D:flag_frequenza
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|FLIP_FLOP_D:flag_pattern
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|FLIP_FLOP_D:flag_start
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|decodifica_ascii:ascii_decodifica|FLIP_FLOP_D:flag_read
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|pc_interface:interfaccia_pc|FLIP_FLOP_D:REGISTER_READ_TC
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|trigger_generator:generatore_trigger
clock => FLIP_FLOP_D:reg_match.CLK
clock => DATA_REGISTER:reg_pattern.CLK
clock => stato~5.DATAIN
load_pattern => Selector1.IN3
load_pattern => DATA_REGISTER:reg_pattern.EN_REG
load_pattern => Selector0.IN2
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.OUTPUTSELECT
rst_as_n => stato.S0_RESET.DATAIN
trigger_ack => stato.DATAB
trigger_ack => Selector2.IN1
pattern[0] => DATA_REGISTER:reg_pattern.DATA_REG_IN[0]
pattern[1] => DATA_REGISTER:reg_pattern.DATA_REG_IN[1]
pattern[2] => DATA_REGISTER:reg_pattern.DATA_REG_IN[2]
pattern[3] => DATA_REGISTER:reg_pattern.DATA_REG_IN[3]
pattern[4] => DATA_REGISTER:reg_pattern.DATA_REG_IN[4]
pattern[5] => DATA_REGISTER:reg_pattern.DATA_REG_IN[5]
pattern[6] => DATA_REGISTER:reg_pattern.DATA_REG_IN[6]
pattern[7] => DATA_REGISTER:reg_pattern.DATA_REG_IN[7]
input[0] => match.IN1
input[1] => match.IN1
input[2] => match.IN1
input[3] => match.IN1
input[4] => match.IN1
input[5] => match.IN1
input[6] => match.IN1
input[7] => match.IN1
match_trigger <= FLIP_FLOP_D:reg_match.DATA_REG_OUT


|Logic_analyzer|trigger_generator:generatore_trigger|FLIP_FLOP_D:reg_match
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|trigger_generator:generatore_trigger|DATA_REGISTER:reg_pattern
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
CLK => DATA_REG_OUT[3]~reg0.CLK
CLK => DATA_REG_OUT[4]~reg0.CLK
CLK => DATA_REG_OUT[5]~reg0.CLK
CLK => DATA_REG_OUT[6]~reg0.CLK
CLK => DATA_REG_OUT[7]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_IN[3] => DATA_REG_OUT.DATAB
DATA_REG_IN[4] => DATA_REG_OUT.DATAB
DATA_REG_IN[5] => DATA_REG_OUT.DATAB
DATA_REG_IN[6] => DATA_REG_OUT.DATAB
DATA_REG_IN[7] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[3] <= DATA_REG_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[4] <= DATA_REG_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[5] <= DATA_REG_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[6] <= DATA_REG_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[7] <= DATA_REG_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|FLIP_FLOP_D:semaforo_start
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|FLIP_FLOP_D:semaforo_read
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN => DATA_REG_OUT.DATAB
DATA_REG_OUT <= DATA_REG_OUT~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|MUX_NBIT:status_mux
SEL[0] => Mux0.IN2
SEL[0] => Mux1.IN2
SEL[0] => Mux2.IN2
SEL[1] => Mux0.IN1
SEL[1] => Mux1.IN1
SEL[1] => Mux2.IN1
SEL[2] => Mux0.IN0
SEL[2] => Mux1.IN0
SEL[2] => Mux2.IN0
DATA_1[0] => Mux2.IN3
DATA_1[1] => Mux1.IN3
DATA_1[2] => Mux0.IN3
DATA_2[0] => Mux2.IN4
DATA_2[1] => Mux1.IN4
DATA_2[2] => Mux0.IN4
DATA_3[0] => Mux2.IN5
DATA_3[1] => Mux1.IN5
DATA_3[2] => Mux0.IN5
DATA_4[0] => Mux2.IN6
DATA_4[1] => Mux1.IN6
DATA_4[2] => Mux0.IN6
DATA_5[0] => Mux2.IN7
DATA_5[1] => Mux1.IN7
DATA_5[2] => Mux0.IN7
DATA_6[0] => Mux2.IN8
DATA_6[1] => Mux1.IN8
DATA_6[2] => Mux0.IN8
DATA_7[0] => Mux2.IN9
DATA_7[1] => Mux1.IN9
DATA_7[2] => Mux0.IN9
DATA_8[0] => Mux2.IN10
DATA_8[1] => Mux1.IN10
DATA_8[2] => Mux0.IN10
DATA_OUT[0] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[2] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|Logic_analyzer|DATA_REGISTER:registro_stato
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
EN_REG => DATA_REG_OUT.OUTPUTSELECT
CLK => DATA_REG_OUT[0]~reg0.CLK
CLK => DATA_REG_OUT[1]~reg0.CLK
CLK => DATA_REG_OUT[2]~reg0.CLK
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
RESET => DATA_REG_OUT.OUTPUTSELECT
DATA_REG_IN[0] => DATA_REG_OUT.DATAB
DATA_REG_IN[1] => DATA_REG_OUT.DATAB
DATA_REG_IN[2] => DATA_REG_OUT.DATAB
DATA_REG_OUT[0] <= DATA_REG_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[1] <= DATA_REG_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DATA_REG_OUT[2] <= DATA_REG_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


