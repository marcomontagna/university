library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity Uart_rx_datapath is
Port(
     
	  CLOCK :IN std_logic;
	  D:IN std_logic;
	  Rst1,Rst2,Rst3,Reset_start,Reset_data:IN std_logic;
	  Shift_start,Shift_data :IN std_logic;
	   En_start,En_data: IN std_logic;
		Inc1,Inc2,Inc3: In std_logic;
		TC1,TC2,TC3 :OUT std_logic;
		Start:OUT std_logic;
		Q: OUT std_logic_vector(7 downto 0)
		
		);
end Uart_rx_datapath;

Architecture path of Uart_rx_datapath is

component counter is
GENERIC ( N : integer :=9 );  
port (CLOCK : in std_logic;
reset:in std_logic;
enable : in std_logic;
valore : in std_logic_vector (N-1 downto 0);
uscita : out std_logic_vector (N-1 downto 0);
TC : out std_logic
);
end  component;

component Shift_reg IS  
	GENERIC ( N : integer :=4 );  
	PORT (D            : IN std_logic;   
		   Clock, Reset,Sh,En : IN  STD_LOGIC;   
		   Q             : OUT std_logic_vector(N-1 DOWNTO 0)); 
			
END  component;
signal uscita1 : std_logic_vector (5 downto 0);
signal uscita2 : std_logic_vector (3 downto 0);
signal uscita3 : std_logic_vector (3 downto 0);
signal uscita_start : std_logic_vector (7 downto 0);
begin
counter_54 : counter generic map(N=>6) port map ( CLOCK, Rst1, Inc1,"110110",uscita1,TC1);
counter_8 : counter generic map(N=>4) port map ( CLOCK, Rst2, Inc2,"1000",uscita2,TC2);
counter_9 : counter generic map(N=>4) port map ( CLOCK, Rst3, Inc3,"1010",uscita3,TC3);

REG_START : Shift_reg generic map(N=>8) port map ( D,CLOCK ,Reset_start,Shift_start,En_start,uscita_start);

Start<=(not(uscita_start(4)) and not(uscita_start(5)) and not(uscita_start(6)) and not(uscita_start(7)) and (uscita_start(0)) and (uscita_start(1)) and (uscita_start(2)) and (uscita_start(3)));

REG_DATA : Shift_reg generic map(N=>8) port map ( D,CLOCK ,Reset_data,Shift_data,En_data,Q);











end path;
